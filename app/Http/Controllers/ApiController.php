<?php

namespace App\Http\Controllers;

use App\Jobs\WriteLogQueue;
use Illuminate\Http\Request;

class ApiController extends Controller
{


    //请求时间 时间戳
    private $requestTime;
    //返回时间 时间戳
    private $responseTime;
    //请求地址
    private $requestUrl;
    //请求参数
    private $requestParam;
    //返回CODE
    public $responseCode;
    //返回CODE信息
    public $responseMessage;
    //返回数据
    public $responseParam;

    //构造参数 注入
    public function __construct(Request $request){
        $this->requestUrl      = $request->getRequestUri();
        $this->requestParam    = $request->all();
        $this->requestTime     = time();
    }
    /**
     * 返回方法
     * @param int $code
     * @param array $data
     */
    public function ajaxReturn(int $code,$data=array()){
        $this->responseCode    = $code;
        $this->responseMessage = ERROR_MESSAGE_LIST[$code]??ERROR_MESSAGE_LIST[E_UNKNOWN];
        $this->responseParam   = $data;
        $this->responseTime    = time();
        //构造返回参数
        $result = [
            'errorCode'=>$code,
            'errorMessage'=>ERROR_MESSAGE_LIST[$code]??ERROR_MESSAGE_LIST[E_UNKNOWN],
            'data'=>$data
        ];
        return response()->json($result);
    }

    //把日志入队列
    private function writeLog(){
        $url   = $this->requestUrl;
        $responseTime = $this->responseTime;
        $requestTime = $this->requestTime;
        $requestParam = $this->requestParam;
        $responseParam = $this->responseParam;
        $responseMessage = $this->responseMessage;
        $responseCode = $this->responseCode;
       /* $content = [
            'url'=>$this->requestUrl,
            'responseTime'=>$this->responseTime,
            'requestTime'=>$this->requestTime,
            'requestParam'=>$this->requestParam,
            'responseParam'=>$this->responseParam,
            'responseMessage'=>$this->responseMessage,
            'responseCode'=>$this->responseCode,
        ];*/
        //入队列  队列名字writelog
        //监听队列  php artisan queue:work --queue=writelog
        $this->dispatch((new WriteLogQueue($requestTime,$responseTime,$url,$requestParam,$responseCode,
            $responseMessage,$responseParam))->onQueue('writelog'));
    }

    //析构函数执行写日志的方法
    public function __destruct(){
        $this->writeLog();
    }

    public function __call($method, $parameters)
    {
        parent::__call($method, $parameters); // TODO: Change the autogenerated stub
    }

}
